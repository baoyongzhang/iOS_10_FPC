{ Parsed from CoreSpotlight.framework CSSearchableItemAttributeSet_Media.h }
{$ifdef CLASSES}

type
  CSMedia = objccategory external (CSSearchableItemAttributeSet)
    procedure setEditors(newValue: NSString *ProtocolPtr); message 'setEditors:';
    function editors: NSString *ProtocolPtr; message 'editors';
    procedure setParticipants(newValue: NSString *ProtocolPtr); message 'setParticipants:';
    function participants: NSString *ProtocolPtr; message 'participants';
    procedure setProjects(newValue: NSString *ProtocolPtr); message 'setProjects:';
    function projects: NSString *ProtocolPtr; message 'projects';
    procedure setDownloadedDate(newValue: NSDate); message 'setDownloadedDate:';
    function downloadedDate: NSDate; message 'downloadedDate';
    procedure setContentSources(newValue: NSString *ProtocolPtr); message 'setContentSources:';
    function contentSources: NSString *ProtocolPtr; message 'contentSources';
    procedure setComment(newValue: NSString); message 'setComment:';
    function comment: NSString; message 'comment';
    procedure setCopyright(newValue: NSString); message 'setCopyright:';
    function copyright: NSString; message 'copyright';
    procedure setLastUsedDate(newValue: NSDate); message 'setLastUsedDate:';
    function lastUsedDate: NSDate; message 'lastUsedDate';
    procedure setContentCreationDate(newValue: NSDate); message 'setContentCreationDate:';
    function contentCreationDate: NSDate; message 'contentCreationDate';
    procedure setContentModificationDate(newValue: NSDate); message 'setContentModificationDate:';
    function contentModificationDate: NSDate; message 'contentModificationDate';
    procedure setAddedDate(newValue: NSDate); message 'setAddedDate:';
    function addedDate: NSDate; message 'addedDate';
    procedure setDuration(newValue: NSNumber); message 'setDuration:';
    function duration: NSNumber; message 'duration';
    procedure setContactKeywords(newValue: NSString *ProtocolPtr); message 'setContactKeywords:';
    function contactKeywords: NSString *ProtocolPtr; message 'contactKeywords';
    procedure setCodecs(newValue: NSString *ProtocolPtr); message 'setCodecs:';
    function codecs: NSString *ProtocolPtr; message 'codecs';
    procedure setMediaTypes(newValue: NSString *ProtocolPtr); message 'setMediaTypes:';
    function mediaTypes: NSString *ProtocolPtr; message 'mediaTypes';
    procedure setStreamable(newValue: NSNumber); message 'setStreamable:';
    function isStreamable: NSNumber; message 'isStreamable';
    procedure setTotalBitRate(newValue: NSNumber); message 'setTotalBitRate:';
    function totalBitRate: NSNumber; message 'totalBitRate';
    procedure setVideoBitRate(newValue: NSNumber); message 'setVideoBitRate:';
    function videoBitRate: NSNumber; message 'videoBitRate';
    procedure setAudioBitRate(newValue: NSNumber); message 'setAudioBitRate:';
    function audioBitRate: NSNumber; message 'audioBitRate';
    procedure setDeliveryType(newValue: NSNumber); message 'setDeliveryType:';
    function deliveryType: NSNumber; message 'deliveryType';
    procedure setOrganizations(newValue: NSString *ProtocolPtr); message 'setOrganizations:';
    function organizations: NSString *ProtocolPtr; message 'organizations';
    procedure setRole(newValue: NSString); message 'setRole:';
    function role: NSString; message 'role';
    procedure setLanguages(newValue: NSString *ProtocolPtr); message 'setLanguages:';
    function languages: NSString *ProtocolPtr; message 'languages';
    procedure setRights(newValue: NSString); message 'setRights:';
    function rights: NSString; message 'rights';
    procedure setPublishers(newValue: NSString *ProtocolPtr); message 'setPublishers:';
    function publishers: NSString *ProtocolPtr; message 'publishers';
    procedure setContributors(newValue: NSString *ProtocolPtr); message 'setContributors:';
    function contributors: NSString *ProtocolPtr; message 'contributors';
    procedure setCoverage(newValue: NSString *ProtocolPtr); message 'setCoverage:';
    function coverage: NSString *ProtocolPtr; message 'coverage';
    procedure setRating(newValue: NSNumber); message 'setRating:';
    function rating: NSNumber; message 'rating';
    procedure setRatingDescription(newValue: NSString); message 'setRatingDescription:';
    function ratingDescription: NSString; message 'ratingDescription';
    procedure setPlayCount(newValue: NSNumber); message 'setPlayCount:';
    function playCount: NSNumber; message 'playCount';
    procedure setInformation(newValue: NSString); message 'setInformation:';
    function information: NSString; message 'information';
    procedure setDirector(newValue: NSString); message 'setDirector:';
    function director: NSString; message 'director';
    procedure setProducer(newValue: NSString); message 'setProducer:';
    function producer: NSString; message 'producer';
    procedure setGenre(newValue: NSString); message 'setGenre:';
    function genre: NSString; message 'genre';
    procedure setPerformers(newValue: NSString *ProtocolPtr); message 'setPerformers:';
    function performers: NSString *ProtocolPtr; message 'performers';
    procedure setOriginalFormat(newValue: NSString); message 'setOriginalFormat:';
    function originalFormat: NSString; message 'originalFormat';
    procedure setOriginalSource(newValue: NSString); message 'setOriginalSource:';
    function originalSource: NSString; message 'originalSource';
    procedure setLocal(newValue: NSNumber); message 'setLocal:';
    function isLocal: NSNumber; message 'isLocal';
    procedure setContentRating(newValue: NSNumber); message 'setContentRating:';
    function contentRating: NSNumber; message 'contentRating';
    procedure setURL(newValue: NSURL); message 'setURL:';
    function URL: NSURL; message 'URL';
  end;

type
  CSMusic = objccategory external (CSSearchableItemAttributeSet)
    procedure setAudioSampleRate(newValue: NSNumber); message 'setAudioSampleRate:';
    function audioSampleRate: NSNumber; message 'audioSampleRate';
    procedure setAudioChannelCount(newValue: NSNumber); message 'setAudioChannelCount:';
    function audioChannelCount: NSNumber; message 'audioChannelCount';
    procedure setTempo(newValue: NSNumber); message 'setTempo:';
    function tempo: NSNumber; message 'tempo';
    procedure setKeySignature(newValue: NSString); message 'setKeySignature:';
    function keySignature: NSString; message 'keySignature';
    procedure setTimeSignature(newValue: NSString); message 'setTimeSignature:';
    function timeSignature: NSString; message 'timeSignature';
    procedure setAudioEncodingApplication(newValue: NSString); message 'setAudioEncodingApplication:';
    function audioEncodingApplication: NSString; message 'audioEncodingApplication';
    procedure setComposer(newValue: NSString); message 'setComposer:';
    function composer: NSString; message 'composer';
    procedure setLyricist(newValue: NSString); message 'setLyricist:';
    function lyricist: NSString; message 'lyricist';
    procedure setAlbum(newValue: NSString); message 'setAlbum:';
    function album: NSString; message 'album';
    procedure setArtist(newValue: NSString); message 'setArtist:';
    function artist: NSString; message 'artist';
    procedure setAudioTrackNumber(newValue: NSNumber); message 'setAudioTrackNumber:';
    function audioTrackNumber: NSNumber; message 'audioTrackNumber';
    procedure setRecordingDate(newValue: NSDate); message 'setRecordingDate:';
    function recordingDate: NSDate; message 'recordingDate';
    procedure setMusicalGenre(newValue: NSString); message 'setMusicalGenre:';
    function musicalGenre: NSString; message 'musicalGenre';
    procedure setGeneralMIDISequence(newValue: NSNumber); message 'setGeneralMIDISequence:';
    function isGeneralMIDISequence: NSNumber; message 'isGeneralMIDISequence';
    procedure setMusicalInstrumentCategory(newValue: NSString); message 'setMusicalInstrumentCategory:';
    function musicalInstrumentCategory: NSString; message 'musicalInstrumentCategory';
    procedure setMusicalInstrumentName(newValue: NSString); message 'setMusicalInstrumentName:';
    function musicalInstrumentName: NSString; message 'musicalInstrumentName';
  end;
{$endif}

